import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import "@rainbow-me/rainbowkit/styles.css";
import { Inter, Poppins } from "next/font/google";
import EnhancedConditionalLayout from "@/components/EnhancedConditionalLayout";
import NextTopLoader from "nextjs-toploader";
import ToastContainer from "@/components/ui/ToastContainer";
import { QueryProvider } from "@/lib/query/QueryProvider";
import { AuthProvider } from "@/features/auth/AuthProvider";
import { WalletProvider } from "@/features/wallet/WalletProvider";
import { WalletGuard } from "@/features/wallet/WalletGuard";
// ...existing code...

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-inter",
});
const poppins = Poppins({
  subsets: ["latin"],
  variable: "--font-poppins",
  weight: ["400", "600"],
});
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Kenesis",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
  {/* Google Translate removed: language switching disabled */}
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${inter.variable} ${poppins.variable} antialiased bg-[#000526] text-white font-sans`}
      >
        {/* Container required by Google Translate (hidden via CSS bar suppression) */}
        <div id="google_translate_element" className="hidden" />
        <NextTopLoader
          color="#0680FF"
          initialPosition={0.08}
          crawlSpeed={200}
          height={4}
          crawl={true}
          showSpinner={true}
          easing="ease"
          speed={200}
          shadow="0 0 10px #0680FF,0 0 5px #0680FF"
          template='<div class="bar" role="bar"><div class="peg"></div></div> 
          <div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'
          zIndex={1600}
          showAtBottom={false}
        />
        <QueryProvider>
          <WalletProvider>
            <AuthProvider>
              <WalletGuard />
              <EnhancedConditionalLayout>{children}</EnhancedConditionalLayout>
            </AuthProvider>
          </WalletProvider>
        </QueryProvider>
        <ToastContainer />
      </body>
    </html>
  );
}
